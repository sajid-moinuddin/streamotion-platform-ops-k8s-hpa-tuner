apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    genre: "custom-controller"
    draft: {{ default "draft-app" .Values.draft }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        genre: "custom-controller"
        draft: {{ default "draft-app" .Values.draft }}
        app: {{ template "fullname" . }}
        application: {{ template "fullname" . }}
  {{- if .Values.podAnnotations }}
annotations:
  {{ toYaml .Values.podAnnotations | indent 8 }}
  {{- end }}
spec:
  containers:
    - name: {{ .Chart.Name }}
      image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
      imagePullPolicy: {{ .Values.image.pullPolicy }}
      env:
  {{- range $pkey, $pval := .Values.env }}
- name: {{ $pkey }}
  value: "{{ $pval }}"
  {{- end }}
  {{- if .Values.extraEnv }}
  {{ toYaml .Values.extraEnv | indent 8 }}
  {{- end }}
ports:
  - containerPort: {{ .Values.service.internalPort }}
livenessProbe:
  httpGet:
    path: {{ .Values.probePath }}
    port: {{ .Values.service.internalPort }}
  initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
  periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
  successThreshold: {{ .Values.livenessProbe.successThreshold }}
  timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
readinessProbe:
  httpGet:
    path: {{ .Values.probePath }}
    port: {{ .Values.service.internalPort }}
  initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
  periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
  successThreshold: {{ .Values.readinessProbe.successThreshold }}
  timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
resources:
  {{ toYaml .Values.resources | indent 10 }}
  {{- if or .Values.lifecycle .Values.newRelic.tagDeployment }}
lifecycle:
  {{ toYaml .Values.lifecycle | indent 10 }}
  {{- if .Values.newRelic.tagDeployment }}
postStart:
  exec:
    command:
      - /bin/sh
      - "-c"
      - "java -jar /newrelic/newrelic.jar deployment --appname={{ .Values.service.name }} --revision={{ .Chart.Version }} || echo Failed creating deployment."
  {{- end }}
  {{- end }}
terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
