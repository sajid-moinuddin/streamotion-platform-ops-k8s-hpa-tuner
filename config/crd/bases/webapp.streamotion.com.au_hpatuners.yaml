
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: hpatuners.webapp.streamotion.com.au
spec:
  group: webapp.streamotion.com.au
  names:
    kind: HpaTuner
    listKind: HpaTunerList
    plural: hpatuners
    singular: hpatuner
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: HpaTuner is the Schema for the hpatuners API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: HpaTunerSpec defines the desired state of HpaTuner
          properties:
            downscaleForbiddenWindowSeconds:
              format: int32
              maximum: 600
              minimum: 1
              type: integer
            maxReplicas:
              format: int32
              maximum: 1000
              minimum: 1
              type: integer
            metrics:
              description: specifications that will be used to calculate the desired
                replica count
              items:
                description: MetricSpec specifies how to scale based on a single metric
                  (only `type` and one other matching field should be set at once).
                properties:
                  external:
                    description: external refers to a global metric that is not associated
                      with any Kubernetes object. It allows autoscaling based on information
                      coming from components running outside of cluster (for example
                      length of queue in cloud messaging service, or QPS from loadbalancer
                      running outside of cluster).
                    properties:
                      metricName:
                        description: metricName is the name of the metric in question.
                        type: string
                      metricSelector:
                        description: metricSelector is used to identify a specific
                          time series within a given metric.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      targetAverageValue:
                        anyOf:
                        - type: integer
                        - type: string
                        description: targetAverageValue is the target per-pod value
                          of global metric (as a quantity). Mutually exclusive with
                          TargetValue.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      targetValue:
                        anyOf:
                        - type: integer
                        - type: string
                        description: targetValue is the target value of the metric
                          (as a quantity). Mutually exclusive with TargetAverageValue.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    required:
                    - metricName
                    type: object
                  object:
                    description: object refers to a metric describing a single kubernetes
                      object (for example, hits-per-second on an Ingress object).
                    properties:
                      averageValue:
                        anyOf:
                        - type: integer
                        - type: string
                        description: averageValue is the target value of the average
                          of the metric across all relevant pods (as a quantity)
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      metricName:
                        description: metricName is the name of the metric in question.
                        type: string
                      selector:
                        description: selector is the string-encoded form of a standard
                          kubernetes label selector for the given metric When set,
                          it is passed as an additional parameter to the metrics server
                          for more specific metrics scoping When unset, just the metricName
                          will be used to gather metrics.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      target:
                        description: target is the described Kubernetes object.
                        properties:
                          apiVersion:
                            description: API version of the referent
                            type: string
                          kind:
                            description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'
                            type: string
                          name:
                            description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      targetValue:
                        anyOf:
                        - type: integer
                        - type: string
                        description: targetValue is the target value of the metric
                          (as a quantity).
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    required:
                    - metricName
                    - target
                    - targetValue
                    type: object
                  pods:
                    description: pods refers to a metric describing each pod in the
                      current scale target (for example, transactions-processed-per-second).  The
                      values will be averaged together before being compared to the
                      target value.
                    properties:
                      metricName:
                        description: metricName is the name of the metric in question
                        type: string
                      selector:
                        description: selector is the string-encoded form of a standard
                          kubernetes label selector for the given metric When set,
                          it is passed as an additional parameter to the metrics server
                          for more specific metrics scoping When unset, just the metricName
                          will be used to gather metrics.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      targetAverageValue:
                        anyOf:
                        - type: integer
                        - type: string
                        description: targetAverageValue is the target value of the
                          average of the metric across all relevant pods (as a quantity)
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    required:
                    - metricName
                    - targetAverageValue
                    type: object
                  resource:
                    description: resource refers to a resource metric (such as those
                      specified in requests and limits) known to Kubernetes describing
                      each pod in the current scale target (e.g. CPU or memory). Such
                      metrics are built in to Kubernetes, and have special scaling
                      options on top of those available to normal per-pod metrics
                      using the "pods" source.
                    properties:
                      name:
                        description: name is the name of the resource in question.
                        type: string
                      targetAverageUtilization:
                        description: targetAverageUtilization is the target value
                          of the average of the resource metric across all relevant
                          pods, represented as a percentage of the requested value
                          of the resource for the pods.
                        format: int32
                        type: integer
                      targetAverageValue:
                        anyOf:
                        - type: integer
                        - type: string
                        description: targetAverageValue is the target value of the
                          average of the resource metric across all relevant pods,
                          as a raw value (instead of as a percentage of the request),
                          similar to the "pods" metric source type.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    required:
                    - name
                    type: object
                  type:
                    description: type is the type of metric source.  It should be
                      one of "Object", "Pods" or "Resource", each mapping to a matching
                      field in the object.
                    type: string
                required:
                - type
                type: object
              type: array
            minReplicas:
              format: int32
              maximum: 1000
              minimum: 1
              type: integer
            scaleTargetRef:
              description: 'part of HorizontalPodAutoscalerSpec, see comments in the
                k8s-1.10.8 repo: staging/src/k8s.io/api/autoscaling/v1/types.go reference
                to scaled resource; horizontal pod autoscaler will learn the current
                resource consumption and will set the desired number of pods by using
                its Scale subresource.'
              properties:
                apiVersion:
                  description: API version of the referent
                  type: string
                kind:
                  description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"'
                  type: string
                name:
                  description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                  type: string
              required:
              - kind
              - name
              type: object
            scaleUpLimitFactor:
              format: int32
              maximum: 10
              minimum: 1
              type: integer
            scaleUpLimitMinimum:
              format: int32
              maximum: 20
              minimum: 1
              type: integer
            upscaleForbiddenWindowSeconds:
              format: int32
              maximum: 600
              minimum: 1
              type: integer
          required:
          - maxReplicas
          - scaleTargetRef
          type: object
        status:
          description: HpaTunerStatus defines the observed state of HpaTuner
          properties:
            lastDownScaleTime:
              description: Last time a scale-down event was observed
              format: date-time
              type: string
            lastUpScaleTime:
              description: Last time a scaleup event was observed
              format: date-time
              type: string
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
